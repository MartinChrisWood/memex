---
title: "Book Review:  Structure and Interpretation of Computer Programs - oh dear lord the maths"
author: "Martin Wood"
date: "2025-04-04"
categories: [book-review]
draft: true
---

# SICP; the old school was brutal

My current data science office is pretty driven, conveniently one of our number is a very experienced programmer and has offered to help
guide us through reading [Structure and Interpretation of Computer Programs](https://web.mit.edu/6.001/6.037/sicp.pdf) (a helpful PDF 
version there).  This book is reportedly a bit special, with a reputation for turning people's brains around and change their view of
programming!  It's also pretty old, dating from back when people really had to care about what they could fit into memory and how
performant their algorithms work (as opposed to my Data Science approach of "can I scale it horizontally?  More cores/memory/VM's!").
The foreword begins:

> This is the second edition SICP book, from Unofficial Texinfo Format.
You are probably reading it in an Info hypertext browser, such as the Info mode of Emacs. You might alternatively be reading it
TEX-formatted on your screen or printer, though that would be silly.

In hindsight this perfectly captured what I was in for.

I'm one of the many people who are now kind of reversing into computer science, having used computational tools for data analysis before
steadily sinking into more sophisticated programming tools as my problems became more complicated and my need to perform shadow IT around
organisational limitations became more and more pressing...

Short version:  While the actual text is very readable, the exercises were very much meant for people with a stronger background in maths.
I studied a natural science, integration was considered a bit fancy.  A lot of the (probably elegant) exercise questions in this book
involve implementing some equation that would probably make perfect sense to me and be obviously relevant if I hadn't spent my degree
dripping acid on rocks to see if they fizzed.

As it is I'm left staring at the question wondering if I'm supposed to care or if a "trigonometric identity" might just mean a triangle
or something?  Ah well.  Thankfully our office's tame wizard is well aware, and is able to help direct us to what we need to know and are
meant to be drawing from sections and exercises.  It's also abundantly clear that this is a course textbook, meant to be drawn from by
a teacher as needed.

Happily, the book is very much still worth working through - there's enough redundancy in the exercises that I can find one or two that'll
teach me something relevant and get the core message!  And who cares if I miss a chunk?  It's still progress, and it still leaves me
knowing some more of the terminology and concepts I feel I've missed in my backwards slide into working with computers.  I'm also not sure
if I'm meant to be doing every exercise anyway, it's a textbook from which an instructor is meant to pick and choose after all.  A goal
of mine is to steadily work through the curriculum set out by [Teach Yourself Computer Science](https://teachyourselfcs.com/), which
suggests getting through chapters 1 - 3 including exercises. 
